{"ast":null,"code":"var _jsxFileName = \"/Users/teddyferdian/Udemy/react/starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expense = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = data => {\n    setFilteredYear(data);\n  };\n\n  const selectedFilterYears = props.items.filter(item => item.date.getFullYear().toString() === filteredYear);\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n\n  if (selectedFilterYears.length > 0) {\n    expensesContent = selectedFilterYears.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: filterChangedHandler,\n        selectedYears: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expense, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"sources":["/Users/teddyferdian/Udemy/react/starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expense","props","filteredYear","setFilteredYear","filterChangedHandler","data","selectedFilterYears","items","filter","item","date","getFullYear","toString","expensesContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,oBAAoB,GAAIC,IAAD,IAAU;AACrCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CACzBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,YADvB,CAA5B;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAGA,MAAIP,mBAAmB,CAACQ,MAApB,GAA6B,CAAjC,EAAoC;AAClCD,IAAAA,eAAe,GAAGP,mBAAmB,CAACS,GAApB,CAAyBC,OAAD,iBACxC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,MAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACN;AAJhB,OACOM,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,cAAc,EAAEf,oBADlB;AAEE,QAAA,aAAa,EAAEF;AAFjB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGW,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAMb,O;;KAAAA,O;AAsCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nconst Expense = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = (data) => {\n    setFilteredYear(data);\n  };\n\n  const selectedFilterYears = props.items.filter(\n    (item) => item.date.getFullYear().toString() === filteredYear\n  );\n\n  let expensesContent = <p>No expense found.</p>\n\n\n  if (selectedFilterYears.length > 0) {\n    expensesContent = selectedFilterYears.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onChangeFilter={filterChangedHandler}\n          selectedYears={filteredYear}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expense;\n"]},"metadata":{},"sourceType":"module"}